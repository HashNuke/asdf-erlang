#!/usr/bin/env bash

set -e

source "$(dirname $0)/utils.sh"

install_erlang() {

  ensure_kerl_setup
  export MAKEFLAGS="-j$ASDF_CONCURRENCY"
  local tmp_download_dir=$(set_tmp_dir)
  local install_type=$ASDF_INSTALL_TYPE
  local install_path=$ASDF_INSTALL_PATH
  local version=$ASDF_INSTALL_VERSION

  if [ "$ASDF_INSTALL_TYPE" = "ref" ]; then
    local asdf_activation_version="$ASDF_INSTALL_TYPE:$ASDF_INSTALL_VERSION"
    $(kerl_path) build git "${OTP_GITHUB_URL:-https://github.com/erlang/otp.git}" "$ASDF_INSTALL_VERSION" "asdf_$ASDF_INSTALL_VERSION"
  else
    local asdf_activation_version="$ASDF_INSTALL_VERSION"
    $(kerl_path) build "$ASDF_INSTALL_VERSION" "asdf_$ASDF_INSTALL_VERSION"
  fi

  $(kerl_path) install "asdf_$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
  $(kerl_path) cleanup "$ASDF_INSTALL_VERSION"

   if [ "$install_type" = "version" ]; then
       if install_man_pages; then
           echo "Downloading man pages"
           local source_path=$(get_docs_download_file_path $version $tmp_download_dir)
           download_docs $version $source_path

           cd $(dirname $source_path)
           tar -xzf $source_path || exit 1

           # Place the `man` directory in the Erlang install
           mv man $install_path
           # remove temporary directory into which erlang manual has been downloaded
           rm $(dirname $source_path) -rf
       else
           echo "Skipping install of man pages"
       fi
   else
       echo "(version check) Skipping install of man pages"
   fi

  link_app_executables $install_path
  
  echo
  echo "Erlang $ASDF_INSTALL_VERSION has been installed. Activate globally with:"
  echo
  echo "    asdf global erlang $asdf_activation_version"
  echo
  echo "Activate locally in the current folder with:"
  echo
  echo "    asdf local erlang $asdf_activation_version"
  echo
}

set_tmp_dir() {
  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir=$(mktemp -d -t erlang_build_XXXXXX)
  else
    local tmp_download_dir=$TMPDIR
  fi
  echo "$tmp_download_dir"
}

link_app_executables() {
    local install_path=$1

    # Link other executables to the bin directory so that asdf shims are created for them
    cd "$install_path/bin"
    ln -s ../lib/*/bin/* ../lib/*/priv/bin/* .
}

download_docs() {
  local version=$1
  local download_path=$2
  local download_url=$(get_docs_download_url $version)

  curl $download_url -Lo $download_path
}


get_docs_download_file_path() {
  local version=$1
  local tmp_download_dir=$2
  local pkg_name="otp_doc_man_${version}.tar.gz"

  echo "$tmp_download_dir/$pkg_name"
}


get_docs_version() {
  local version=$1
  local version_string_length=`expr length $version`
  local fst=`expr index $version .`
  local version_part=${version:$fst:$version_string_length-$fst}
  local snd=`expr index $version_part .`
  if [ $snd == "0" ]; then
    local docversion=$version
  else
    local docversion="${version:0:$fst+$snd-1}"
  fi
  echo $docversion
}

get_docs_download_url() {
  local version=$1
  local docversion=$(get_docs_version $version)
  echo "http://www.erlang.org/download/otp_doc_man_${docversion}.tar.gz"
}


install_man_pages() {
    OPTIONS=$ASDF_ERLANG_OPTIONS

    while :; do
        case ${OPTIONS:-} in
            -n|--no-docs)
                return 1
                ;;
            *)
                if [ -z "${OPTIONS:-}" ]; then
                    break
                fi
        esac

        shift
    done

    return 0
}

install_erlang
