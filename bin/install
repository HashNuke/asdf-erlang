#!/usr/bin/env bash

set -e

source "$(dirname $0)/utils.sh"

install_erlang() {

  ensure_kerl_setup
  export MAKEFLAGS="-j$ASDF_CONCURRENCY"
  local tmp_download_dir=$(set_tmp_dir)
  local install_type=$ASDF_INSTALL_TYPE
  local install_path=$ASDF_INSTALL_PATH
  local version=$ASDF_INSTALL_VERSION

  # tell kerl to build documentattion (html & man pages)
  export KERL_BUILD_DOCS=yes
  
  if [ "$ASDF_INSTALL_TYPE" = "ref" ]; then
    local asdf_activation_version="$ASDF_INSTALL_TYPE:$ASDF_INSTALL_VERSION"
    $(kerl_path) build git "${OTP_GITHUB_URL:-https://github.com/erlang/otp.git}" "$ASDF_INSTALL_VERSION" "asdf_$ASDF_INSTALL_VERSION"
  else
    local asdf_activation_version="$ASDF_INSTALL_VERSION"
    $(kerl_path) build "$ASDF_INSTALL_VERSION" "asdf_$ASDF_INSTALL_VERSION"
  fi

  $(kerl_path) install "asdf_$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
  $(kerl_path) cleanup "$ASDF_INSTALL_VERSION"

  unset KERL_BUILD_DOCS

  link_app_executables $install_path
  
  echo
  echo "Erlang $ASDF_INSTALL_VERSION has been installed. Activate globally with:"
  echo
  echo "    asdf global erlang $asdf_activation_version"
  echo
  echo "Activate locally in the current folder with:"
  echo
  echo "    asdf local erlang $asdf_activation_version"
  echo
}

set_tmp_dir() {
  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir=$(mktemp -d -t erlang_build_XXXXXX)
  else
    local tmp_download_dir=$TMPDIR
  fi
  echo "$tmp_download_dir"
}

link_app_executables() {
    local install_path=$1

    # Link other executables to the bin directory so that asdf shims are created for them
    cd "$install_path/bin"
    ln -s ../lib/*/bin/* ../lib/*/priv/bin/* .
}

install_erlang
